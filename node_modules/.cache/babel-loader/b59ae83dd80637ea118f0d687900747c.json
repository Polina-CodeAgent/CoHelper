{"ast":null,"code":"import firebase from 'firebase';\nexport default function validateInfo(values) {\n  let errors = {};\n  const db = firebase.firestore();\n\n  const func = async () => {\n    console.log('async start');\n    const t = await db.collection(\"users\").get().then(async querySnapshot => {\n      await querySnapshot.forEach(doc => {\n        console.log(values.email == doc.data().email);\n\n        if (values.email == doc.data().email) {\n          errors.email = 'Email уже есть в базе!';\n        }\n      });\n    });\n    const wait = await t;\n  };\n\n  if (!values.username.trim()) {\n    errors.username = 'Введите название!';\n  }\n\n  if (!(values.activity !== '0')) {\n    errors.activity = 'Сделайте выбор!';\n  }\n\n  if (!values.city.trim()) {\n    errors.city = 'Введите местоположение!';\n  }\n\n  if (!values.email) {\n    errors.email = 'Введите email!';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n    errors.email = 'Email введен неверно!';\n  } else {\n    func();\n  }\n\n  if (!values.password) {\n    errors.password = 'Введите пароль!';\n  } else if (values.password.length < 6) {\n    errors.password = 'Минимум 6 символов!';\n  }\n\n  if (!values.password2) {\n    errors.password2 = 'Введите пароль!';\n  } else if (values.password2 !== values.password) {\n    errors.password2 = 'Пароль не подтвержден!';\n  }\n\n  if (!(values.findFor.advertising || values.findFor.clients || values.findFor.providers || values.findFor.investors)) {\n    errors.findFor = 'Выберите хотя бы один вариант';\n  }\n\n  console.log(errors);\n  return errors;\n}","map":{"version":3,"sources":["C:/Users/a-pol/CoHelper/src/components/RegistrationForm/Elements/validateInfo.js"],"names":["firebase","validateInfo","values","errors","db","firestore","func","console","log","t","collection","get","then","querySnapshot","forEach","doc","email","data","wait","username","trim","activity","city","test","password","length","password2","findFor","advertising","clients","providers","investors"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC3C,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMC,EAAE,GAAGJ,QAAQ,CAACK,SAAT,EAAX;;AAEA,QAAMC,IAAI,GAAG,YAAW;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAMC,CAAC,GAAE,MAAML,EAAE,CAACM,UAAH,CAAc,OAAd,EAAuBC,GAAvB,GAA6BC,IAA7B,CAAkC,MAAOC,aAAP,IAAyB;AACxE,YAAMA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AACnCR,QAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACc,KAAP,IAAgBD,GAAG,CAACE,IAAJ,GAAWD,KAAvC;;AACA,YAAId,MAAM,CAACc,KAAP,IAAgBD,GAAG,CAACE,IAAJ,GAAWD,KAA/B,EAAsC;AACpCb,UAAAA,MAAM,CAACa,KAAP,GAAe,wBAAf;AAED;AACF,OANK,CAAN;AAOD,KARc,CAAf;AASA,UAAME,IAAI,GAAE,MAAMT,CAAlB;AACD,GAZD;;AAcA,MAAI,CAACP,MAAM,CAACiB,QAAP,CAAgBC,IAAhB,EAAL,EAA6B;AAC3BjB,IAAAA,MAAM,CAACgB,QAAP,GAAkB,mBAAlB;AACD;;AAGD,MAAI,EAAEjB,MAAM,CAACmB,QAAP,KAAoB,GAAtB,CAAJ,EAAgC;AAC9BlB,IAAAA,MAAM,CAACkB,QAAP,GAAkB,iBAAlB;AACD;;AAED,MAAI,CAACnB,MAAM,CAACoB,IAAP,CAAYF,IAAZ,EAAL,EAAyB;AACvBjB,IAAAA,MAAM,CAACmB,IAAP,GAAc,yBAAd;AACD;;AAED,MAAI,CAACpB,MAAM,CAACc,KAAZ,EAAmB;AACjBb,IAAAA,MAAM,CAACa,KAAP,GAAe,gBAAf;AACD,GAFD,MAEO,IAAI,CAAC,eAAeO,IAAf,CAAoBrB,MAAM,CAACc,KAA3B,CAAL,EAAwC;AAC7Cb,IAAAA,MAAM,CAACa,KAAP,GAAe,uBAAf;AACD,GAFM,MAEA;AACNV,IAAAA,IAAI;AACJ;;AAID,MAAI,CAACJ,MAAM,CAACsB,QAAZ,EAAsB;AACpBrB,IAAAA,MAAM,CAACqB,QAAP,GAAkB,iBAAlB;AACD,GAFD,MAEO,IAAItB,MAAM,CAACsB,QAAP,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AACrCtB,IAAAA,MAAM,CAACqB,QAAP,GAAkB,qBAAlB;AACD;;AAED,MAAI,CAACtB,MAAM,CAACwB,SAAZ,EAAuB;AACrBvB,IAAAA,MAAM,CAACuB,SAAP,GAAmB,iBAAnB;AACD,GAFD,MAEO,IAAIxB,MAAM,CAACwB,SAAP,KAAqBxB,MAAM,CAACsB,QAAhC,EAA0C;AAC/CrB,IAAAA,MAAM,CAACuB,SAAP,GAAmB,wBAAnB;AACD;;AAED,MAAI,EAAExB,MAAM,CAACyB,OAAP,CAAeC,WAAf,IAA8B1B,MAAM,CAACyB,OAAP,CAAeE,OAA7C,IAAwD3B,MAAM,CAACyB,OAAP,CAAeG,SAAvE,IAAoF5B,MAAM,CAACyB,OAAP,CAAeI,SAArG,CAAJ,EAAqH;AACnH5B,IAAAA,MAAM,CAACwB,OAAP,GAAiB,+BAAjB;AACD;;AACDpB,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,SAAOA,MAAP;AACD","sourcesContent":["import firebase from 'firebase';\r\n\r\nexport default function validateInfo(values) {\r\n  let errors = {};\r\n  const db = firebase.firestore();\r\n\r\n  const func = async () =>{\r\n    console.log('async start')\r\n    const t= await db.collection(\"users\").get().then(async (querySnapshot) => {\r\n      await querySnapshot.forEach((doc) => {\r\n        console.log(values.email == doc.data().email)\r\n        if (values.email == doc.data().email) {\r\n          errors.email = 'Email уже есть в базе!';\r\n\r\n        }\r\n      })\r\n    })\r\n    const wait= await t;\r\n  }\r\n\r\n  if (!values.username.trim()) {\r\n    errors.username = 'Введите название!';\r\n  }\r\n\r\n\r\n  if (!(values.activity !== '0')) {\r\n    errors.activity = 'Сделайте выбор!'\r\n  }\r\n\r\n  if (!values.city.trim()) {\r\n    errors.city = 'Введите местоположение!';\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = 'Введите email!';\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = 'Email введен неверно!';\r\n  } else {\r\n   func();\r\n  }\r\n\r\n\r\n\r\n  if (!values.password) {\r\n    errors.password = 'Введите пароль!';\r\n  } else if (values.password.length < 6) {\r\n    errors.password = 'Минимум 6 символов!';\r\n  }\r\n\r\n  if (!values.password2) {\r\n    errors.password2 = 'Введите пароль!';\r\n  } else if (values.password2 !== values.password) {\r\n    errors.password2 = 'Пароль не подтвержден!';\r\n  }\r\n\r\n  if (!(values.findFor.advertising || values.findFor.clients || values.findFor.providers || values.findFor.investors)) {\r\n    errors.findFor = 'Выберите хотя бы один вариант';\r\n  }\r\n  console.log(errors);\r\n  return errors;\r\n}"]},"metadata":{},"sourceType":"module"}