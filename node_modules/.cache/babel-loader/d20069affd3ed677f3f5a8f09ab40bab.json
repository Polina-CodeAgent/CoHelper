{"ast":null,"code":"import firebase from 'firebase';\nexport default function validateInfo(values, valid_em) {\n  let errors = {};\n  const db = firebase.firestore();\n\n  if (!values.username.trim()) {\n    errors.username = 'Введите название!';\n  }\n\n  if (!(values.activity !== '0')) {\n    errors.activity = 'Сделайте выбор!';\n  }\n\n  if (!values.city.trim()) {\n    errors.city = 'Введите местоположение!';\n  }\n\n  if (!values.email) {\n    errors.email = 'Введите email!';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n    errors.email = 'Email введен неверно!';\n  } else {\n    {\n      valid_em.then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          // console.log(db.collection(\"users\").get())\n          if (values.email == doc.data().email) {\n            errors.email = 'Email уже есть в базе!';\n          }\n        });\n      });\n    }\n  }\n\n  const logCities = async () => {\n    let citiesRef = db.collection('users');\n    let allCities = await citiesRef.get();\n\n    for (const doc of allCities.docs) {// console.log(doc.id, '=>', doc.data());\n    }\n  };\n\n  logCities(); // function timeoutPromise(interval) {\n  //   return new Promise((resolve, reject) => {\n  //     setTimeout(function(){\n  //       resolve(\"done\");\n  //     }, interval);\n  //   });\n  // };\n  // async function timeTest() {\n  //   const timeoutPromise1 = timeoutPromise(3000);\n  //   const timeoutPromise2 = timeoutPromise(3000);\n  //   const timeoutPromise3 = timeoutPromise(3000);\n  //   await timeoutPromise1;\n  //   await timeoutPromise2;\n  //   await timeoutPromise3;\n  //   alert('ready')\n  // }\n  // timeTest();\n  // console.log('next')\n\n  if (!values.password) {\n    errors.password = 'Введите пароль!';\n  } else if (values.password.length < 6) {\n    errors.password = 'Минимум 6 символов!';\n  }\n\n  if (!values.password2) {\n    errors.password2 = 'Введите пароль!';\n  } else if (values.password2 !== values.password) {\n    errors.password2 = 'Пароль не подтвержден!';\n  }\n\n  if (!(values.findFor.advertising || values.findFor.clients || values.findFor.providers || values.findFor.investors)) {\n    errors.findFor = 'Выберите хотя бы один вариант';\n  }\n\n  console.log(errors);\n  return errors;\n}","map":{"version":3,"sources":["C:/Users/a-pol/CoHelper/src/components/RegistrationForm/Elements/validateInfo.js"],"names":["firebase","validateInfo","values","valid_em","errors","db","firestore","username","trim","activity","city","email","test","then","querySnapshot","forEach","doc","data","logCities","citiesRef","collection","allCities","get","docs","password","length","password2","findFor","advertising","clients","providers","investors","console","log"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,QAA9B,EAAwC;AACrD,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMC,EAAE,GAAGL,QAAQ,CAACM,SAAT,EAAX;;AAEA,MAAI,CAACJ,MAAM,CAACK,QAAP,CAAgBC,IAAhB,EAAL,EAA6B;AAC3BJ,IAAAA,MAAM,CAACG,QAAP,GAAkB,mBAAlB;AACD;;AAGD,MAAI,EAAEL,MAAM,CAACO,QAAP,KAAoB,GAAtB,CAAJ,EAAgC;AAC9BL,IAAAA,MAAM,CAACK,QAAP,GAAkB,iBAAlB;AACD;;AAED,MAAI,CAACP,MAAM,CAACQ,IAAP,CAAYF,IAAZ,EAAL,EAAyB;AACvBJ,IAAAA,MAAM,CAACM,IAAP,GAAc,yBAAd;AACD;;AAED,MAAI,CAACR,MAAM,CAACS,KAAZ,EAAmB;AACjBP,IAAAA,MAAM,CAACO,KAAP,GAAe,gBAAf;AACD,GAFD,MAEO,IAAI,CAAC,eAAeC,IAAf,CAAoBV,MAAM,CAACS,KAA3B,CAAL,EAAwC;AAC7CP,IAAAA,MAAM,CAACO,KAAP,GAAe,uBAAf;AACD,GAFM,MAEA;AACL;AACER,MAAAA,QAAQ,CAACU,IAAT,CAAeC,aAAD,IAAmB;AAC/BA,QAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC7B;AACA,cAAId,MAAM,CAACS,KAAP,IAAgBK,GAAG,CAACC,IAAJ,GAAWN,KAA/B,EAAsC;AACpCP,YAAAA,MAAM,CAACO,KAAP,GAAe,wBAAf;AACD;AACF,SALD;AAMD,OAPD;AAQD;AACF;;AACD,QAAMO,SAAS,GAAG,YAAY;AAC5B,QAAIC,SAAS,GAAGd,EAAE,CAACe,UAAH,CAAc,OAAd,CAAhB;AACA,QAAIC,SAAS,GAAG,MAAMF,SAAS,CAACG,GAAV,EAAtB;;AACA,SAAK,MAAMN,GAAX,IAAkBK,SAAS,CAACE,IAA5B,EAAkC,CAChC;AACD;AACF,GAND;;AAOAL,EAAAA,SAAS,GAxC4C,CAyCrD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAI,CAAChB,MAAM,CAACsB,QAAZ,EAAsB;AACpBpB,IAAAA,MAAM,CAACoB,QAAP,GAAkB,iBAAlB;AACD,GAFD,MAEO,IAAItB,MAAM,CAACsB,QAAP,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AACrCrB,IAAAA,MAAM,CAACoB,QAAP,GAAkB,qBAAlB;AACD;;AAED,MAAI,CAACtB,MAAM,CAACwB,SAAZ,EAAuB;AACrBtB,IAAAA,MAAM,CAACsB,SAAP,GAAmB,iBAAnB;AACD,GAFD,MAEO,IAAIxB,MAAM,CAACwB,SAAP,KAAqBxB,MAAM,CAACsB,QAAhC,EAA0C;AAC/CpB,IAAAA,MAAM,CAACsB,SAAP,GAAmB,wBAAnB;AACD;;AAED,MAAI,EAAExB,MAAM,CAACyB,OAAP,CAAeC,WAAf,IAA8B1B,MAAM,CAACyB,OAAP,CAAeE,OAA7C,IAAwD3B,MAAM,CAACyB,OAAP,CAAeG,SAAvE,IAAoF5B,MAAM,CAACyB,OAAP,CAAeI,SAArG,CAAJ,EAAqH;AACnH3B,IAAAA,MAAM,CAACuB,OAAP,GAAiB,+BAAjB;AACD;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAY7B,MAAZ;AACA,SAAOA,MAAP;AACD","sourcesContent":["import firebase from 'firebase';\r\n\r\nexport default function validateInfo(values, valid_em) {\r\n  let errors = {};\r\n  const db = firebase.firestore();\r\n\r\n  if (!values.username.trim()) {\r\n    errors.username = 'Введите название!';\r\n  }\r\n\r\n\r\n  if (!(values.activity !== '0')) {\r\n    errors.activity = 'Сделайте выбор!'\r\n  }\r\n\r\n  if (!values.city.trim()) {\r\n    errors.city = 'Введите местоположение!';\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = 'Введите email!';\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = 'Email введен неверно!';\r\n  } else {\r\n    {\r\n      valid_em.then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          // console.log(db.collection(\"users\").get())\r\n          if (values.email == doc.data().email) {\r\n            errors.email = 'Email уже есть в базе!';\r\n          }\r\n        })\r\n      });\r\n    }\r\n  }\r\n  const logCities = async () => {\r\n    let citiesRef = db.collection('users');\r\n    let allCities = await citiesRef.get();\r\n    for (const doc of allCities.docs) {\r\n      // console.log(doc.id, '=>', doc.data());\r\n    }\r\n  }\r\n  logCities();\r\n  // function timeoutPromise(interval) {\r\n  //   return new Promise((resolve, reject) => {\r\n  //     setTimeout(function(){\r\n  //       resolve(\"done\");\r\n  //     }, interval);\r\n  //   });\r\n  // };\r\n\r\n  // async function timeTest() {\r\n  //   const timeoutPromise1 = timeoutPromise(3000);\r\n  //   const timeoutPromise2 = timeoutPromise(3000);\r\n  //   const timeoutPromise3 = timeoutPromise(3000);\r\n\r\n  //   await timeoutPromise1;\r\n  //   await timeoutPromise2;\r\n  //   await timeoutPromise3;\r\n  //   alert('ready')\r\n  // }\r\n\r\n  // timeTest();\r\n  // console.log('next')\r\n\r\n  if (!values.password) {\r\n    errors.password = 'Введите пароль!';\r\n  } else if (values.password.length < 6) {\r\n    errors.password = 'Минимум 6 символов!';\r\n  }\r\n\r\n  if (!values.password2) {\r\n    errors.password2 = 'Введите пароль!';\r\n  } else if (values.password2 !== values.password) {\r\n    errors.password2 = 'Пароль не подтвержден!';\r\n  }\r\n\r\n  if (!(values.findFor.advertising || values.findFor.clients || values.findFor.providers || values.findFor.investors)) {\r\n    errors.findFor = 'Выберите хотя бы один вариант';\r\n  }\r\n  console.log(errors);\r\n  return errors;\r\n}"]},"metadata":{},"sourceType":"module"}