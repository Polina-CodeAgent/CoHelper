{"ast":null,"code":"import firebase from 'firebase';\nexport default function validateInfo(values) {\n  let errors = {};\n  const db = firebase.firestore();\n\n  if (!values.username.trim()) {\n    errors.username = 'Введите название!';\n  }\n\n  if (!(values.activity !== '0')) {\n    errors.activity = 'Сделайте выбор!';\n  }\n\n  if (!values.city.trim()) {\n    errors.city = 'Введите местоположение!';\n  }\n\n  if (!values.email) {\n    errors.email = 'Введите email!';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n    errors.email = 'Email введен неверно!';\n  } else {\n    const t = async () => {\n      await db.collection(\"users\").get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          console.log(values.email == doc.data().email);\n\n          if (values.email == doc.data().email) {\n            errors.email = 'Email уже есть в базе!';\n            return errors.email;\n          }\n        });\n      });\n    };\n\n    t();\n  }\n\n  if (!values.password) {\n    errors.password = 'Введите пароль!';\n  } else if (values.password.length < 6) {\n    errors.password = 'Минимум 6 символов!';\n  }\n\n  if (!values.password2) {\n    errors.password2 = 'Введите пароль!';\n  } else if (values.password2 !== values.password) {\n    errors.password2 = 'Пароль не подтвержден!';\n  }\n\n  if (!(values.findFor.advertising || values.findFor.clients || values.findFor.providers || values.findFor.investors)) {\n    errors.findFor = 'Выберите хотя бы один вариант';\n  }\n\n  setTimeout(() => {}, 10000);\n  return errors;\n}","map":{"version":3,"sources":["C:/Users/a-pol/CoHelper/src/components/RegistrationForm/Elements/validateInfo.js"],"names":["firebase","validateInfo","values","errors","db","firestore","username","trim","activity","city","email","test","t","collection","get","then","querySnapshot","forEach","doc","console","log","data","password","length","password2","findFor","advertising","clients","providers","investors","setTimeout"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC3C,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMC,EAAE,GAAGJ,QAAQ,CAACK,SAAT,EAAX;;AAIA,MAAI,CAACH,MAAM,CAACI,QAAP,CAAgBC,IAAhB,EAAL,EAA6B;AAC3BJ,IAAAA,MAAM,CAACG,QAAP,GAAkB,mBAAlB;AACD;;AAGD,MAAI,EAAEJ,MAAM,CAACM,QAAP,KAAoB,GAAtB,CAAJ,EAAgC;AAC9BL,IAAAA,MAAM,CAACK,QAAP,GAAkB,iBAAlB;AACD;;AAED,MAAI,CAACN,MAAM,CAACO,IAAP,CAAYF,IAAZ,EAAL,EAAyB;AACvBJ,IAAAA,MAAM,CAACM,IAAP,GAAc,yBAAd;AACD;;AAED,MAAI,CAACP,MAAM,CAACQ,KAAZ,EAAmB;AACjBP,IAAAA,MAAM,CAACO,KAAP,GAAe,gBAAf;AACD,GAFD,MAEO,IAAI,CAAC,eAAeC,IAAf,CAAoBT,MAAM,CAACQ,KAA3B,CAAL,EAAwC;AAC7CP,IAAAA,MAAM,CAACO,KAAP,GAAe,uBAAf;AACD,GAFM,MAEA;AACL,UAAME,CAAC,GAAG,YAAY;AACpB,YAAMR,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,GAAvB,GAA6BC,IAA7B,CAAmCC,aAAD,IAAmB;AACzDA,QAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC7BC,UAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAM,CAACQ,KAAP,IAAgBQ,GAAG,CAACG,IAAJ,GAAWX,KAAvC;;AACA,cAAIR,MAAM,CAACQ,KAAP,IAAgBQ,GAAG,CAACG,IAAJ,GAAWX,KAA/B,EAAsC;AACpCP,YAAAA,MAAM,CAACO,KAAP,GAAe,wBAAf;AACA,mBAAQP,MAAM,CAACO,KAAf;AACD;AACF,SAND;AAOD,OARK,CAAN;AASD,KAVD;;AAWAE,IAAAA,CAAC;AACF;;AAID,MAAI,CAACV,MAAM,CAACoB,QAAZ,EAAsB;AACpBnB,IAAAA,MAAM,CAACmB,QAAP,GAAkB,iBAAlB;AACD,GAFD,MAEO,IAAIpB,MAAM,CAACoB,QAAP,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AACrCpB,IAAAA,MAAM,CAACmB,QAAP,GAAkB,qBAAlB;AACD;;AAED,MAAI,CAACpB,MAAM,CAACsB,SAAZ,EAAuB;AACrBrB,IAAAA,MAAM,CAACqB,SAAP,GAAmB,iBAAnB;AACD,GAFD,MAEO,IAAItB,MAAM,CAACsB,SAAP,KAAqBtB,MAAM,CAACoB,QAAhC,EAA0C;AAC/CnB,IAAAA,MAAM,CAACqB,SAAP,GAAmB,wBAAnB;AACD;;AAED,MAAI,EAAEtB,MAAM,CAACuB,OAAP,CAAeC,WAAf,IAA8BxB,MAAM,CAACuB,OAAP,CAAeE,OAA7C,IAAwDzB,MAAM,CAACuB,OAAP,CAAeG,SAAvE,IAAoF1B,MAAM,CAACuB,OAAP,CAAeI,SAArG,CAAJ,EAAqH;AACnH1B,IAAAA,MAAM,CAACsB,OAAP,GAAiB,+BAAjB;AACD;;AACDK,EAAAA,UAAU,CAAC,MAAM,CAAG,CAAV,EAAY,KAAZ,CAAV;AACA,SAAO3B,MAAP;AACD","sourcesContent":["import firebase from 'firebase';\r\n\r\nexport default function validateInfo(values) {\r\n  let errors = {};\r\n  const db = firebase.firestore();\r\n\r\n\r\n\r\n  if (!values.username.trim()) {\r\n    errors.username = 'Введите название!';\r\n  }\r\n\r\n\r\n  if (!(values.activity !== '0')) {\r\n    errors.activity = 'Сделайте выбор!'\r\n  }\r\n\r\n  if (!values.city.trim()) {\r\n    errors.city = 'Введите местоположение!';\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = 'Введите email!';\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = 'Email введен неверно!';\r\n  } else {\r\n    const t = async () => {\r\n      await db.collection(\"users\").get().then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          console.log(values.email == doc.data().email)\r\n          if (values.email == doc.data().email) {\r\n            errors.email = 'Email уже есть в базе!';\r\n            return (errors.email)\r\n          }\r\n        })\r\n      })\r\n    }\r\n    t();\r\n  }\r\n\r\n\r\n\r\n  if (!values.password) {\r\n    errors.password = 'Введите пароль!';\r\n  } else if (values.password.length < 6) {\r\n    errors.password = 'Минимум 6 символов!';\r\n  }\r\n\r\n  if (!values.password2) {\r\n    errors.password2 = 'Введите пароль!';\r\n  } else if (values.password2 !== values.password) {\r\n    errors.password2 = 'Пароль не подтвержден!';\r\n  }\r\n\r\n  if (!(values.findFor.advertising || values.findFor.clients || values.findFor.providers || values.findFor.investors)) {\r\n    errors.findFor = 'Выберите хотя бы один вариант';\r\n  }\r\n  setTimeout(() => { }, 10000)\r\n  return errors;\r\n}"]},"metadata":{},"sourceType":"module"}