{"ast":null,"code":"import firebase from 'firebase';\nimport { useState } from 'react';\nexport default function validateInfo(values) {\n  let errors = {};\n  const db = firebase.firestore();\n  const [emails, setEmails] = useState([]);\n  db.collection(\"users\").get().then(querySnapshot => {\n    querySnapshot.forEach(doc => {\n      setEmails([...emails, doc.data().email]);\n    });\n  });\n\n  if (!values.username.trim()) {\n    errors.username = 'Введите название!';\n  }\n\n  if (!(values.activity !== '0')) {\n    errors.activity = 'Сделайте выбор!';\n  }\n\n  if (!values.city.trim()) {\n    errors.city = 'Введите местоположение!';\n  }\n\n  if (!values.email) {\n    errors.email = 'Введите email!';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n    errors.email = 'Email введен неверно!';\n  } else {\n    if (emails.some(em => em == values.email)) {\n      errors.email = 'Email уже есть в базе';\n    }\n  }\n\n  if (!values.password) {\n    errors.password = 'Введите пароль!';\n  } else if (values.password.length < 6) {\n    errors.password = 'Минимум 6 символов!';\n  }\n\n  if (!values.password2) {\n    errors.password2 = 'Введите пароль!';\n  } else if (values.password2 !== values.password) {\n    errors.password2 = 'Пароль не подтвержден!';\n  }\n\n  if (!(values.findFor.advertising || values.findFor.clients || values.findFor.providers || values.findFor.investors)) {\n    errors.findFor = 'Выберите хотя бы один вариант';\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["C:/Users/a-pol/CoHelper/src/components/RegistrationForm/Elements/validateInfo.js"],"names":["firebase","useState","validateInfo","values","errors","db","firestore","emails","setEmails","collection","get","then","querySnapshot","forEach","doc","data","email","username","trim","activity","city","test","some","em","password","length","password2","findFor","advertising","clients","providers","investors"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC3C,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMC,EAAE,GAAGL,QAAQ,CAACM,SAAT,EAAX;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACAI,EAAAA,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBC,GAAvB,GAA6BC,IAA7B,CAAmCC,aAAD,IAAmB;AACnDA,IAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC7BN,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYO,GAAG,CAACC,IAAJ,GAAWC,KAAvB,CAAD,CAAT;AACD,KAFD;AAGD,GAJD;;AAMA,MAAI,CAACb,MAAM,CAACc,QAAP,CAAgBC,IAAhB,EAAL,EAA6B;AAC3Bd,IAAAA,MAAM,CAACa,QAAP,GAAkB,mBAAlB;AACD;;AAGD,MAAI,EAAEd,MAAM,CAACgB,QAAP,KAAoB,GAAtB,CAAJ,EAAgC;AAC9Bf,IAAAA,MAAM,CAACe,QAAP,GAAkB,iBAAlB;AACD;;AAED,MAAI,CAAChB,MAAM,CAACiB,IAAP,CAAYF,IAAZ,EAAL,EAAyB;AACvBd,IAAAA,MAAM,CAACgB,IAAP,GAAc,yBAAd;AACD;;AAED,MAAI,CAACjB,MAAM,CAACa,KAAZ,EAAmB;AACjBZ,IAAAA,MAAM,CAACY,KAAP,GAAe,gBAAf;AACD,GAFD,MAEO,IAAI,CAAC,eAAeK,IAAf,CAAoBlB,MAAM,CAACa,KAA3B,CAAL,EAAwC;AAC7CZ,IAAAA,MAAM,CAACY,KAAP,GAAe,uBAAf;AACD,GAFM,MAEA;AACL,QAAGT,MAAM,CAACe,IAAP,CAAaC,EAAD,IAAMA,EAAE,IAAEpB,MAAM,CAACa,KAA7B,CAAH,EAAuC;AACrCZ,MAAAA,MAAM,CAACY,KAAP,GAAe,uBAAf;AACD;AACF;;AAID,MAAI,CAACb,MAAM,CAACqB,QAAZ,EAAsB;AACpBpB,IAAAA,MAAM,CAACoB,QAAP,GAAkB,iBAAlB;AACD,GAFD,MAEO,IAAIrB,MAAM,CAACqB,QAAP,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AACrCrB,IAAAA,MAAM,CAACoB,QAAP,GAAkB,qBAAlB;AACD;;AAED,MAAI,CAACrB,MAAM,CAACuB,SAAZ,EAAuB;AACrBtB,IAAAA,MAAM,CAACsB,SAAP,GAAmB,iBAAnB;AACD,GAFD,MAEO,IAAIvB,MAAM,CAACuB,SAAP,KAAqBvB,MAAM,CAACqB,QAAhC,EAA0C;AAC/CpB,IAAAA,MAAM,CAACsB,SAAP,GAAmB,wBAAnB;AACD;;AAED,MAAI,EAAEvB,MAAM,CAACwB,OAAP,CAAeC,WAAf,IAA8BzB,MAAM,CAACwB,OAAP,CAAeE,OAA7C,IAAwD1B,MAAM,CAACwB,OAAP,CAAeG,SAAvE,IAAoF3B,MAAM,CAACwB,OAAP,CAAeI,SAArG,CAAJ,EAAqH;AACnH3B,IAAAA,MAAM,CAACuB,OAAP,GAAiB,+BAAjB;AACD;;AACD,SAAOvB,MAAP;AACD","sourcesContent":["import firebase from 'firebase';\r\nimport {useState} from 'react';\r\n\r\nexport default function validateInfo(values) {\r\n  let errors = {};\r\n  const db = firebase.firestore();\r\n  const [emails, setEmails] = useState([]);\r\n  db.collection(\"users\").get().then((querySnapshot) => {\r\n    querySnapshot.forEach((doc) => {\r\n      setEmails([...emails, doc.data().email]);\r\n    })\r\n  })\r\n\r\n  if (!values.username.trim()) {\r\n    errors.username = 'Введите название!';\r\n  }\r\n\r\n\r\n  if (!(values.activity !== '0')) {\r\n    errors.activity = 'Сделайте выбор!'\r\n  }\r\n\r\n  if (!values.city.trim()) {\r\n    errors.city = 'Введите местоположение!';\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = 'Введите email!';\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = 'Email введен неверно!';\r\n  } else {\r\n    if(emails.some((em)=>em==values.email)){\r\n      errors.email = 'Email уже есть в базе'\r\n    }\r\n  }\r\n\r\n\r\n\r\n  if (!values.password) {\r\n    errors.password = 'Введите пароль!';\r\n  } else if (values.password.length < 6) {\r\n    errors.password = 'Минимум 6 символов!';\r\n  }\r\n\r\n  if (!values.password2) {\r\n    errors.password2 = 'Введите пароль!';\r\n  } else if (values.password2 !== values.password) {\r\n    errors.password2 = 'Пароль не подтвержден!';\r\n  }\r\n\r\n  if (!(values.findFor.advertising || values.findFor.clients || values.findFor.providers || values.findFor.investors)) {\r\n    errors.findFor = 'Выберите хотя бы один вариант';\r\n  }\r\n  return errors;\r\n}"]},"metadata":{},"sourceType":"module"}