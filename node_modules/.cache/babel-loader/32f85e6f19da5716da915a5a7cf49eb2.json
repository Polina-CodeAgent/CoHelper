{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst UseAuthForm = () => {\n  const [values, setValues] = useState({\n    email: '',\n    password: ''\n  });\n  const db = firebase.firestore();\n  const [error, setError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [curUser, setCurUser] = useState('');\n  const [allUsers, setAllUsers] = useState([]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let flag = false;\n    const querySnapshot = await db.collection(\"users\").get();\n    querySnapshot.forEach(doc => {\n      if (doc.data().email == values.email && doc.data().password == values.password) {\n        querySnapshot.forEach(doc => {\n          allUsers.push(doc.data());\n          setAllUsers([...allUsers]);\n        });\n        console.log(allUsers);\n        setCurUser(doc.data().token);\n        setIsSubmitting(true);\n        setError('');\n        flag = true;\n      }\n    });\n\n    if (!flag) {\n      setError('Email или пароль введен неверно!');\n    }\n  }\n\n  ;\n  useEffect(() => {\n    if (error.length === 0 && isSubmitting) {\n      localStorage.setItem(\"token\", curUser);\n      console.log(allUsers);\n      localStorage.setItem(\"users\", allUsers); // window.location.href=\"/homepage\";\n    }\n  }, [error, isSubmitting]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    error\n  };\n};\n\nexport default UseAuthForm;","map":{"version":3,"sources":["C:/Users/a-pol/CoHelper/src/components/AuthForm/UseAuthForm.js"],"names":["useState","useEffect","firebase","UseAuthForm","values","setValues","email","password","db","firestore","error","setError","isSubmitting","setIsSubmitting","curUser","setCurUser","allUsers","setAllUsers","handleChange","e","name","value","target","handleSubmit","preventDefault","flag","querySnapshot","collection","get","forEach","doc","data","push","console","log","token","length","localStorage","setItem"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AACjCM,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,QAAQ,EAAE;AAFuB,GAAD,CAApC;AAKA,QAAMC,EAAE,GAAGN,QAAQ,CAACO,SAAT,EAAX;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMkB,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAjB,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACgB,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,iBAAeE,YAAf,CAA4BJ,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACK,cAAF;AACA,QAAIC,IAAI,GAAC,KAAT;AACA,UAAMC,aAAa,GAAG,MAAMlB,EAAE,CAACmB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,EAA5B;AACAF,IAAAA,aAAa,CAACG,OAAd,CAAuBC,GAAD,IAAS;AAC3B,UAAIA,GAAG,CAACC,IAAJ,GAAWzB,KAAX,IAAoBF,MAAM,CAACE,KAA3B,IAAoCwB,GAAG,CAACC,IAAJ,GAAWxB,QAAX,IAAuBH,MAAM,CAACG,QAAtE,EAAgF;AAC5EmB,QAAAA,aAAa,CAACG,OAAd,CAAuBC,GAAD,IAAO;AAACd,UAAAA,QAAQ,CAACgB,IAAT,CAAcF,GAAG,CAACC,IAAJ,EAAd;AAA2Bd,UAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,CAAD,CAAX;AAA2B,SAApF;AACAiB,QAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAZ;AACAD,QAAAA,UAAU,CAACe,GAAG,CAACC,IAAJ,GAAWI,KAAZ,CAAV;AACAtB,QAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAc,QAAAA,IAAI,GAAC,IAAL;AAEH;AACJ,KAVD;;AAWA,QAAG,CAACA,IAAJ,EAAS;AAACd,MAAAA,QAAQ,CAAC,kCAAD,CAAR;AAA6C;AAC1D;;AAAA;AAEDV,EAAAA,SAAS,CACL,MAAM;AACF,QAAIS,KAAK,CAAC0B,MAAN,KAAiB,CAAjB,IAAsBxB,YAA1B,EAAwC;AACpCyB,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BxB,OAA9B;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAZ;AACAqB,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BtB,QAA9B,EAHoC,CAIpC;AAEH;AACJ,GATI,EASF,CAACN,KAAD,EAAOE,YAAP,CATE,CAAT;AAWA,SAAO;AAAEM,IAAAA,YAAF;AAAgBK,IAAAA,YAAhB;AAA8BnB,IAAAA,MAA9B;AAAsCM,IAAAA;AAAtC,GAAP;AACH,CAnDD;;AAqDA,eAAeP,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport firebase from 'firebase';\r\n\r\nconst UseAuthForm = () => {\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n    \r\n    const db = firebase.firestore();\r\n    \r\n    const [error, setError] = useState('');\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [curUser, setCurUser] = useState('')\r\n    const [allUsers, setAllUsers] = useState([]);\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        let flag=false;\r\n        const querySnapshot = await db.collection(\"users\").get();\r\n        querySnapshot.forEach((doc) => {\r\n            if (doc.data().email == values.email && doc.data().password == values.password) {\r\n                querySnapshot.forEach((doc)=>{allUsers.push(doc.data()); setAllUsers([...allUsers])})\r\n                console.log(allUsers);\r\n                setCurUser(doc.data().token);\r\n                setIsSubmitting(true);\r\n                setError('');\r\n                flag=true;\r\n\r\n            }\r\n        });\r\n        if(!flag){setError('Email или пароль введен неверно!')} \r\n    };\r\n\r\n    useEffect(\r\n        () => {\r\n            if (error.length === 0 && isSubmitting) {\r\n                localStorage.setItem(\"token\", curUser)\r\n                console.log(allUsers);\r\n                localStorage.setItem(\"users\", allUsers);\r\n                // window.location.href=\"/homepage\";\r\n\r\n            }\r\n        }, [error,isSubmitting]\r\n    );\r\n    return { handleChange, handleSubmit, values, error };\r\n};\r\n\r\nexport default UseAuthForm;"]},"metadata":{},"sourceType":"module"}