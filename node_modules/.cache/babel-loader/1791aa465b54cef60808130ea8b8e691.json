{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst UseAuthForm = () => {\n  const [values, setValues] = useState({\n    email: '',\n    password: ''\n  });\n  const db = firebase.firestore();\n  const [error, setError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    console.log(values);\n    let flag = false;\n    const querySnapshot = await db.collection(\"users\").get();\n    querySnapshot.forEach(doc => {\n      if (doc.data().email == values.email && doc.data().password == values.password) {\n        console.log(doc.data().email, values.email);\n        setIsSubmitting(true);\n        setError('');\n        flag = true;\n      }\n    });\n\n    if (!flag) {\n      setError('Email или пароль введен неверно!');\n    }\n  }\n\n  ;\n  useEffect(() => {\n    console.log(isSubmitting, error.length);\n\n    if (error.length === 0 && isSubmitting) {\n      console.log('success');\n    }\n  }, [error, isSubmitting]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    error\n  };\n};\n\nexport default UseAuthForm;","map":{"version":3,"sources":["C:/Users/a-pol/CoHelper/src/components/AuthForm/UseAuthForm.js"],"names":["useState","useEffect","firebase","UseAuthForm","values","setValues","email","password","db","firestore","error","setError","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","flag","querySnapshot","collection","get","forEach","doc","data","length"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AACjCM,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,QAAQ,EAAE;AAFuB,GAAD,CAApC;AAKA,QAAMC,EAAE,GAAGN,QAAQ,CAACO,SAAT,EAAX;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMc,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAb,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACY,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,iBAAeE,YAAf,CAA4BJ,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACK,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACA,QAAImB,IAAI,GAAC,KAAT;AACA,UAAMC,aAAa,GAAG,MAAMhB,EAAE,CAACiB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,EAA5B;AACAF,IAAAA,aAAa,CAACG,OAAd,CAAuBC,GAAD,IAAS;AAC3B,UAAIA,GAAG,CAACC,IAAJ,GAAWvB,KAAX,IAAoBF,MAAM,CAACE,KAA3B,IAAoCsB,GAAG,CAACC,IAAJ,GAAWtB,QAAX,IAAuBH,MAAM,CAACG,QAAtE,EAAgF;AAC5Ec,QAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACC,IAAJ,GAAWvB,KAAvB,EAA8BF,MAAM,CAACE,KAArC;AACAO,QAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAY,QAAAA,IAAI,GAAC,IAAL;AACH;AACJ,KAPD;;AAQA,QAAG,CAACA,IAAJ,EAAS;AAACZ,MAAAA,QAAQ,CAAC,kCAAD,CAAR;AAA6C;AAC1D;;AAAA;AAEDV,EAAAA,SAAS,CACL,MAAM;AACFoB,IAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ,EAA0BF,KAAK,CAACoB,MAAhC;;AACA,QAAIpB,KAAK,CAACoB,MAAN,KAAiB,CAAjB,IAAsBlB,YAA1B,EAAwC;AACpCS,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AACJ,GANI,EAMF,CAACZ,KAAD,EAAOE,YAAP,CANE,CAAT;AAQA,SAAO;AAAEE,IAAAA,YAAF;AAAgBK,IAAAA,YAAhB;AAA8Bf,IAAAA,MAA9B;AAAsCM,IAAAA;AAAtC,GAAP;AACH,CA5CD;;AA8CA,eAAeP,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport firebase from 'firebase';\r\n\r\nconst UseAuthForm = () => {\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n    \r\n    const db = firebase.firestore();\r\n    \r\n    const [error, setError] = useState('');\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        console.log(values);\r\n        let flag=false;\r\n        const querySnapshot = await db.collection(\"users\").get();\r\n        querySnapshot.forEach((doc) => {\r\n            if (doc.data().email == values.email && doc.data().password == values.password) {\r\n                console.log(doc.data().email, values.email )\r\n                setIsSubmitting(true);\r\n                setError('');\r\n                flag=true;\r\n            }\r\n        });\r\n        if(!flag){setError('Email или пароль введен неверно!')} \r\n    };\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(isSubmitting, error.length);\r\n            if (error.length === 0 && isSubmitting) {\r\n                console.log('success')\r\n            }\r\n        }, [error,isSubmitting]\r\n    );\r\n    return { handleChange, handleSubmit, values, error };\r\n};\r\n\r\nexport default UseAuthForm;"]},"metadata":{},"sourceType":"module"}