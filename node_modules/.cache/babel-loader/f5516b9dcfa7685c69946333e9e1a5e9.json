{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useForm = (callback, validate, emails) => {\n  const [values, setValues] = useState({\n    username: '',\n    activity: '',\n    email: '',\n    city: '',\n    password: '',\n    password2: '',\n    findFor: {\n      providers: false,\n      clients: false,\n      investors: false,\n      advertising: false\n    }\n  });\n  const db = firebase.firestore();\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(emails);\n    setErrors(validate(values, emails));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n      let token = db.collection('users').doc().id;\n      db.collection(\"users\").add({\n        'token': token,\n        'city': values.city,\n        'activity': values.activity,\n        'email': values.email,\n        'password': values.password,\n        'companyName': values.username,\n        'findFor': values.findFor\n      }).then(docRef => {\n        console.log(\"Document written with ID: \", docRef.id);\n      }).catch(error => {\n        console.error(\"Error adding document: \", error);\n      });\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/a-pol/CoHelper/src/components/RegistrationForm/Elements/useForm.js"],"names":["useState","useEffect","firebase","useForm","callback","validate","emails","values","setValues","username","activity","email","city","password","password2","findFor","providers","clients","investors","advertising","db","firestore","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","Object","keys","length","token","collection","doc","id","add","then","docRef","catch","error"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,MAArB,KAAgC;AAC9C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC;AACnCS,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,QAAQ,EAAE,EAFyB;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,IAAI,EAAE,EAJ6B;AAKnCC,IAAAA,QAAQ,EAAE,EALyB;AAMnCC,IAAAA,SAAS,EAAE,EANwB;AAOnCC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,SAAS,EAAE,KAAb;AAAoBC,MAAAA,OAAO,EAAE,KAA7B;AAAoCC,MAAAA,SAAS,EAAE,KAA/C;AAAsDC,MAAAA,WAAW,EAAE;AAAnE;AAP0B,GAAD,CAApC;AASA,QAAMC,EAAE,GAAGlB,QAAQ,CAACmB,SAAT,EAAX;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAM0B,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAtB,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACqB,IAAD,GAAQC;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,YAAY,GAAGJ,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY5B,MAAZ;AACAiB,IAAAA,SAAS,CAAClB,QAAQ,CAACE,MAAD,EAAQD,MAAR,CAAT,CAAT;AACAmB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GALD;;AAOAxB,EAAAA,SAAS,CACP,MAAM;AACJ,QAAIkC,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBe,MAApB,KAA+B,CAA/B,IAAoCb,YAAxC,EAAsD;AACpDpB,MAAAA,QAAQ;AACR,UAAIkC,KAAK,GAAGlB,EAAE,CAACmB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,GAA6BC,EAAzC;AACArB,MAAAA,EAAE,CAACmB,UAAH,CAAc,OAAd,EAAuBG,GAAvB,CAA2B;AACzB,iBAASJ,KADgB;AAEzB,gBAAQ/B,MAAM,CAACK,IAFU;AAGzB,oBAAYL,MAAM,CAACG,QAHM;AAIzB,iBAASH,MAAM,CAACI,KAJS;AAKzB,oBAAYJ,MAAM,CAACM,QALM;AAMzB,uBAAeN,MAAM,CAACE,QANG;AAOzB,mBAAWF,MAAM,CAACQ;AAPO,OAA3B,EASG4B,IATH,CASSC,MAAD,IAAY;AAChBX,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CU,MAAM,CAACH,EAAjD;AACD,OAXH,EAYGI,KAZH,CAYUC,KAAD,IAAW;AAChBb,QAAAA,OAAO,CAACa,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACD,OAdH;AAeD;AACF,GArBM,EAsBP,CAACxB,MAAD,CAtBO,CAAT;AAyBA,SAAO;AAAEI,IAAAA,YAAF;AAAgBK,IAAAA,YAAhB;AAA8BxB,IAAAA,MAA9B;AAAsCe,IAAAA;AAAtC,GAAP;AACD,CAxDD;;AA0DA,eAAenB,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport firebase from 'firebase';\r\n\r\nconst useForm = (callback, validate, emails) => {\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    activity: '',\r\n    email: '',\r\n    city: '',\r\n    password: '',\r\n    password2: '',\r\n    findFor: { providers: false, clients: false, investors: false, advertising: false },\r\n  });\r\n  const db = firebase.firestore();\r\n  \r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(emails);\r\n    setErrors(validate(values,emails));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (Object.keys(errors).length === 0 && isSubmitting) {\r\n        callback();\r\n        let token = db.collection('users').doc().id;\r\n        db.collection(\"users\").add({\r\n          'token': token,\r\n          'city': values.city,\r\n          'activity': values.activity,\r\n          'email': values.email,\r\n          'password': values.password,\r\n          'companyName': values.username,\r\n          'findFor': values.findFor,\r\n        })\r\n          .then((docRef) => {\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error adding document: \", error);\r\n          });\r\n      }\r\n    },\r\n    [errors]\r\n  );\r\n\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useForm;"]},"metadata":{},"sourceType":"module"}