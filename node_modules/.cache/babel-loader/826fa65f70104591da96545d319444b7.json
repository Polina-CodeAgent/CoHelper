{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport default function useForm(callback, validate) {\n  const [userData, setUserData] = useState({\n    companyName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    city: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setUserData(prev => ({ ...prev,\n      [id]: value\n    }));\n  };\n\n  const handleSubmitClick = e => {\n    e.preventDefault();\n    setErrors(validate(userData));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors, callback, isSubmitting]);\n  return {\n    handleChange,\n    handleSubmitClick,\n    userData,\n    errors\n  };\n}","map":{"version":3,"sources":["C:/Users/a-pol/react-website-v1/src/components/RegistrationForm/Elements/UseForm.js"],"names":["useState","useEffect","useForm","callback","validate","userData","setUserData","companyName","email","password","confirmPassword","city","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","id","value","target","prev","handleSubmitClick","preventDefault","Object","keys","length"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,OAAT,CAAiBC,QAAjB,EAA2BC,QAA3B,EAAqC;AAEhD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC;AACrCO,IAAAA,WAAW,EAAE,EADwB;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,QAAQ,EAAE,EAH2B;AAIrCC,IAAAA,eAAe,EAAE,EAJoB;AAKrCC,IAAAA,IAAI,EAAE;AAL+B,GAAD,CAAxC;AAOA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMgB,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgBF,CAAC,CAACG,MAAxB;AACAd,IAAAA,WAAW,CAACe,IAAI,KAAK,EACjB,GAAGA,IADc;AACR,OAACH,EAAD,GAAMC;AADE,KAAL,CAAL,CAAX;AAGH,GALD;;AAOA,QAAMG,iBAAiB,GAAIL,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACM,cAAF;AACAV,IAAAA,SAAS,CAACT,QAAQ,CAACC,QAAD,CAAT,CAAT;AACAU,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GAJD;;AAMAd,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGuB,MAAM,CAACC,IAAP,CAAYb,MAAZ,EAAoBc,MAApB,KAA+B,CAA/B,IAAoCZ,YAAvC,EAAoD;AAChDX,MAAAA,QAAQ;AACX;AACJ,GAJQ,EAIN,CAACS,MAAD,EAAST,QAAT,EAAmBW,YAAnB,CAJM,CAAT;AAMA,SAAO;AAACE,IAAAA,YAAD;AAAeM,IAAAA,iBAAf;AAAkCjB,IAAAA,QAAlC;AAA4CO,IAAAA;AAA5C,GAAP;AACH","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport default function useForm(callback, validate) {\r\n\r\n    const [userData, setUserData] = useState({\r\n        companyName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        city: \"\",\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target;\r\n        setUserData(prev => ({\r\n            ...prev, [id]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmitClick = (e) => {\r\n        e.preventDefault();\r\n        setErrors(validate(userData));\r\n        setIsSubmitting(true);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if(Object.keys(errors).length === 0 && isSubmitting){\r\n            callback();\r\n        }\r\n    }, [errors, callback, isSubmitting]);\r\n\r\n    return {handleChange, handleSubmitClick, userData, errors};\r\n}"]},"metadata":{},"sourceType":"module"}